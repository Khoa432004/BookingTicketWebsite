"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/customers/page",{

/***/ "(app-pages-browser)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearLoginInfo: () => (/* binding */ clearLoginInfo),\n/* harmony export */   getBaseUrl: () => (/* binding */ getBaseUrl),\n/* harmony export */   getUserId: () => (/* binding */ getUserId),\n/* harmony export */   getUserName: () => (/* binding */ getUserName),\n/* harmony export */   getUserType: () => (/* binding */ getUserType),\n/* harmony export */   isLoggedIn: () => (/* binding */ isLoggedIn),\n/* harmony export */   login: () => (/* binding */ login),\n/* harmony export */   logout: () => (/* binding */ logout),\n/* harmony export */   saveLoginInfo: () => (/* binding */ saveLoginInfo)\n/* harmony export */ });\n/* harmony import */ var _services_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/services/env */ \"(app-pages-browser)/./services/env.ts\");\n// Hàm utility cho việc quản lý authentication\n\n// For getting base URL\nconst getBaseUrl = ()=>{\n    const currentEnv = (0,_services_env__WEBPACK_IMPORTED_MODULE_0__.getCurrentEnvironment)();\n    const baseUrl = (0,_services_env__WEBPACK_IMPORTED_MODULE_0__.getApiBaseUrl)();\n    console.log('Current environment in auth:', currentEnv);\n    console.log('Adjusted base URL in auth:', baseUrl);\n    return baseUrl;\n};\n// For login URL based on environment\nconst getLoginUrl = ()=>{\n    const baseUrl = getBaseUrl();\n    const loginUrl = \"\".concat(baseUrl, \"/admin/dang-nhap\");\n    console.log('Login URL:', loginUrl);\n    return loginUrl;\n};\n// For logout URL based on environment\nconst getLogoutUrl = ()=>{\n    const baseUrl = getBaseUrl();\n    // Sửa lại URL để gọi đúng endpoint /dang-xuat\n    const logoutUrl = \"\".concat(baseUrl, \"/dang-xuat\");\n    console.log('Logout URL:', logoutUrl);\n    return logoutUrl;\n};\n/**\r\n * Kiểm tra xem người dùng đã đăng nhập hay chưa\r\n */ const isLoggedIn = ()=>{\n    if (false) {}\n    const isLoggedIn = sessionStorage.getItem(\"isAdminLoggedIn\") === \"true\";\n    console.log('Is logged in:', isLoggedIn);\n    return isLoggedIn;\n};\n/**\r\n * Lấy tên người dùng đã đăng nhập\r\n */ const getUserName = ()=>{\n    if (false) {}\n    const userName = sessionStorage.getItem(\"adminUserName\");\n    console.log('User name:', userName);\n    return userName;\n};\n/**\r\n * Lấy loại tài khoản người dùng\r\n */ const getUserType = ()=>{\n    if (false) {}\n    const userType = sessionStorage.getItem(\"adminUserType\");\n    console.log('User type:', userType);\n    return userType;\n};\n/**\r\n * Lấy ID người dùng đã đăng nhập\r\n */ const getUserId = ()=>{\n    if (false) {}\n    // Kiểm tra từ sessionStorage\n    const fromSession = sessionStorage.getItem(\"adminUserId\");\n    // Nếu không có trong session, thử lấy từ cookie\n    if (!fromSession) {\n        const fromCookie = getCookie(\"adminUserId\");\n        console.log('User ID from cookie:', fromCookie);\n        return fromCookie;\n    }\n    console.log('User ID from session:', fromSession);\n    return fromSession;\n};\n/**\r\n * Hàm trợ giúp để lấy giá trị cookie\r\n */ const getCookie = (name)=>{\n    if (typeof document === 'undefined') return null;\n    const value = \"; \".concat(document.cookie);\n    const parts = value.split(\"; \".concat(name, \"=\"));\n    if (parts.length === 2) {\n        var _parts_pop;\n        const cookieValue = ((_parts_pop = parts.pop()) === null || _parts_pop === void 0 ? void 0 : _parts_pop.split(';').shift()) || null;\n        console.log(\"Cookie \".concat(name, \":\"), cookieValue);\n        return cookieValue;\n    }\n    console.log(\"Cookie \".concat(name, \" not found\"));\n    return null;\n};\n/**\r\n * Hàm trợ giúp để đặt cookie\r\n */ const setCookie = function(name, value) {\n    let days = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;\n    if (typeof document === 'undefined') return;\n    const date = new Date();\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    const expires = \"; expires=\" + date.toUTCString();\n    document.cookie = \"\".concat(name, \"=\").concat(value).concat(expires, \"; path=/; SameSite=Lax\");\n    console.log(\"Set cookie \".concat(name, \":\"), value);\n};\n/**\r\n * Lưu thông tin đăng nhập vào session\r\n */ const saveLoginInfo = (userName, userType, userId)=>{\n    if (false) {}\n    // Lưu vào sessionStorage\n    sessionStorage.setItem(\"adminUserName\", userName);\n    sessionStorage.setItem(\"adminUserType\", userType);\n    sessionStorage.setItem(\"adminUserId\", userId);\n    sessionStorage.setItem(\"isAdminLoggedIn\", \"true\");\n    // Lưu thêm vào cookie\n    setCookie(\"adminUserId\", userId);\n    setCookie(\"adminUserName\", userName);\n    console.log(\"Đã lưu thông tin đăng nhập vào cookie và session:\", {\n        userName,\n        userType,\n        userId\n    });\n    // Kích hoạt event để thông báo cho các component khác\n    window.dispatchEvent(new Event('storage'));\n};\n/**\r\n * Xóa thông tin đăng nhập khỏi session\r\n */ const clearLoginInfo = ()=>{\n    sessionStorage.removeItem(\"adminUserName\");\n    sessionStorage.removeItem(\"adminUserType\");\n    sessionStorage.removeItem(\"adminUserId\");\n    sessionStorage.removeItem(\"isAdminLoggedIn\");\n    // Xóa cookies\n    setCookie(\"adminUserId\", \"\", -1);\n    setCookie(\"adminUserName\", \"\", -1);\n    console.log(\"Đã xóa thông tin đăng nhập khỏi session và cookie\");\n    // Kích hoạt event để thông báo cho các component khác\n    window.dispatchEvent(new Event('storage'));\n};\n/**\r\n * Thực hiện đăng nhập\r\n */ const login = async (userName, password)=>{\n    try {\n        console.log(\"Đang đăng nhập admin với:\", userName);\n        const response = await fetch(getLoginUrl(), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n                \"Accept\": \"application/json\"\n            },\n            credentials: \"include\",\n            body: new URLSearchParams({\n                name: userName,\n                password: password\n            })\n        });\n        const data = await response.json();\n        if (response.ok) {\n            console.log(\"Đăng nhập admin thành công, response data:\", data);\n            const userId = data.userId || \"1\";\n            const userType = data.userType || \"admin\";\n            const userNameFromResponse = data.userName || userName;\n            saveLoginInfo(userNameFromResponse, userType, userId);\n            return {\n                success: true,\n                message: \"Đăng nhập thành công\",\n                userType: userType,\n                userId: userId\n            };\n        } else {\n            console.log(\"Đăng nhập thất bại, response data:\", data);\n            return {\n                success: false,\n                message: data.error || \"Đăng nhập thất bại\"\n            };\n        }\n    } catch (error) {\n        console.error(\"Admin login error:\", error);\n        return {\n            success: false,\n            message: \"Không thể kết nối đến server\"\n        };\n    }\n};\n/**\r\n * Thực hiện đăng xuất\r\n */ const logout = async ()=>{\n    try {\n        const response = await fetch(getLogoutUrl(), {\n            method: \"POST\",\n            credentials: \"include\"\n        });\n        if (response.ok) {\n            clearLoginInfo();\n            console.log(\"Đăng xuất thành công\");\n            return {\n                success: true,\n                message: \"Đăng xuất thành công\"\n            };\n        } else {\n            console.log(\"Đăng xuất thất bại, response status:\", response.status);\n            return {\n                success: false,\n                message: \"Đăng xuất thất bại\"\n            };\n        }\n    } catch (error) {\n        console.error(\"Admin logout error:\", error);\n        // Vẫn xóa dữ liệu ngay cả khi gọi API thất bại\n        clearLoginInfo();\n        return {\n            success: false,\n            message: \"Không thể kết nối đến server\"\n        };\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/auth.ts\n"));

/***/ })

});